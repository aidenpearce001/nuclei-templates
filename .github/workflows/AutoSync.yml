# This is a basic workflow to help you get started with Actions

name: New CVE Notification

# Controls when the workflow will run
on:
  workflow_dispatch:
  schedule: 
    - cron: "0 * * * *"
    
permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout target repo

        uses: actions/checkout@v3
        with:
          fetch-depth: 500
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - run: |
            git filter-branch -- --all

      # Step 2: Sync Fork 
      - name: Sync and merge upstream repository with your current repository
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.WORKFLOW_TOKEN }}
          upstream_sync_branch: main
          target_sync_branch: main
          target_branch_push_args: '--force'
          upstream_pull_args: '--allow-unrelated-histories'
          upstream_sync_repo: projectdiscovery/nuclei-templates
          upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

      # Step 3: Display a sample message based on the sync output var 'has_new_commits'
      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true'
        run: echo "New commits were found to sync."

      - name: No new commits
        if: steps.sync.outputs.has_new_commits == 'false'
        run: echo "There were no new commits."

      - name: Show value of 'has_new_commits'
        run: echo ${{ steps.sync.outputs.has_new_commits }}
        
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}

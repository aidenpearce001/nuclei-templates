# This is a basic workflow to help you get started with Actions

name: New CVE Notification

# Controls when the workflow will run
on:
  workflow_dispatch:
  schedule: 
    - cron: "0 23,5 * * *"
    
permissions:
  contents: write

jobs:
  # check_upstream job will check if upstream repo have any changed or not
  check_upstream: 
    runs-on: ubuntu-latest
    
    outputs:
      output1: ${{ steps.vars.outputs.output }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: main
        submodules: 'recursive'
        depth: 1

    - name: Fetch upstream repository
      run: |
        git remote add upstream https://github.com/projectdiscovery/nuclei-templates.git
        git fetch upstream

    # get the diff between current repo and upstream repo and output to new_files.txt
    - name: Compare branches
      run: |
        git diff --name-only HEAD..upstream/main > new_files.txt && sed -i '/workflow\|.github\|^\.\|md$\|txt$\|cves.json/d' new_files.txt
        
    - name: Set Variable
      id: vars
      run: |
        echo "::set-output name=outputs::$(cat new_files.txt)"
        
    - name: Check if output is empty
      run: |
        # Check if the output variable is empty
        if [ -z "${{ steps.vars.outputs.outputs }}" ]; then
          echo "Output variable is empty"
        else
          echo "Output variable contains: ${{ steps.vars.outputs.outputs }}"
        fi

    - name: Check if new_files exist
      if: steps.compare-branches.outputs.new_files != ''
      run: |
        # Post file content to notification in order to notify new files on upstream repo
        curl --data-binary @new_files.txt ${{ secrets.NOTIFICATION_ENDPOINT }}
  
  sync_upstream:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Sync with Upstream Repo
    needs: check_upstream
    if: ${{ needs.check_upstream.outputs.output1 != '' }} 

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout target repo

        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          token: ${{ secrets.WORKFLOW_TOKEN }}

      # Step 2: Sync Fork 
      - name: Sync and merge upstream repository with your current repository
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.WORKFLOW_TOKEN }}
          upstream_sync_repo: projectdiscovery/nuclei-templates
          upstream_sync_branch: main
          target_sync_branch: main
          
          # This arg may have to change in order to fix the unshallow error
          shallow_since: '2 month ago'

      # Step 3: Display a sample message based on the sync output var 'has_new_commits'
      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true'
        run: echo "New commits were found to sync."

      - name: No new commits
        if: steps.sync.outputs.has_new_commits == 'false'
        run: echo "There were no new commits."

      - name: Show value of 'has_new_commits'
        run: echo ${{ steps.sync.outputs.has_new_commits }}
        
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - sync_upstream
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
